name: E2E Tests

on:
  push:
    branches: [ main ]
    paths:
      - 'apps/web/**'
      - 'apps/ai/**'
      - 'docker-compose.yml'
      - '.github/workflows/e2e-tests.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'apps/web/**'
      - 'apps/ai/**'
      - 'docker-compose.yml'
      - '.github/workflows/e2e-tests.yml'

jobs:
  e2e-tests:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: maratron_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
          
      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
    - uses: actions/checkout@v5

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: |
        npm ci
        cd apps/web && npm ci

    - name: Setup environment
      run: |
        cp apps/web/.env.example apps/web/.env.local
        echo "DATABASE_URL=postgresql://postgres:postgres@localhost:5432/maratron_test" >> apps/web/.env.local
        echo "REDIS_URL=redis://localhost:6379" >> apps/web/.env.local
        echo "REDIS_HOST=localhost" >> apps/web/.env.local
        echo "REDIS_PORT=6379" >> apps/web/.env.local
        echo "REDIS_ENABLED=true" >> apps/web/.env.local

    - name: Setup database
      run: |
        cd apps/web
        npx prisma db push
        npm run db:seed

    - name: Install Playwright Browsers
      run: cd apps/web && npx playwright install --with-deps

    - name: Build application
      run: cd apps/web && npm run build

    - name: Run E2E tests
      run: cd apps/web && npm run test:e2e
      env:
        NODE_ENV: test

    - name: Upload Playwright Report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report
        path: apps/web/playwright-report/
        retention-days: 30

    - name: Upload Test Results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: apps/web/test-results/
        retention-days: 30