[project]
name = "maratron-ai"
version = "1.0.0"
description = "MCP server for Maratron AI with database tools and web app integration"
readme = "README.md"
requires-python = ">=3.11"
authors = [
    {name = "Maratron AI Team"}
]
license = {text = "MIT"}
keywords = ["mcp", "fastapi", "postgresql", "running", "fitness"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    "mcp[cli]>=1.9.4",
    "asyncpg>=0.29.0",
    "pydantic>=2.8.0",
    "pydantic-settings>=2.4.0",
    "python-dotenv>=1.0.0",
    "pytz>=2024.1",
]

[project.scripts]
maratron-server = "maratron_ai.server:main"
maratron-health = "scripts.health_check:main"

[project.entry-points."mcp.servers"]
maratron = "maratron_ai.server:main"

[project.optional-dependencies]
test = [
    "pytest>=8.0.0",
    "pytest-asyncio>=0.23.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.12.0",
    "asyncpg-stubs>=0.29.0",
    "ruff>=0.6.0",
    "mypy>=1.8.0",
    "bandit>=1.7.5",
]

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--cov=src/maratron_ai",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--strict-markers",
    "-v"
]
markers = [
    "unit: Unit tests with mocked dependencies",
    "integration: Integration tests with real database",
    "slow: Slow running tests"
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src"]
